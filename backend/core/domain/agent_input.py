from datetime import datetime
from typing import Any, override

from core.domain._autogenerated_id import AutoGeneratedId
from core.domain.message import Message
from core.domain.typology import Typology


class AgentInput(AutoGeneratedId):
    variables: dict[str, Any] | None = None
    messages: list[Message] | None = None
    preview: str = ""

    @property
    def typology(self) -> Typology:
        # TODO: not sure how it could not have text
        typology = Typology(has_text=True)
        if not self.messages:
            return typology

        for m in self.messages:
            for c in m.content:
                if c.file:
                    if c.file.is_image:
                        typology.has_image = True
                    elif c.file.is_audio:
                        typology.has_audio = True
                    elif c.file.is_pdf:
                        typology.has_pdf = True
        return typology

    @override
    def _excluded_fields(self):
        return {"id", "preview"}


class SavedAgentInput(AgentInput):
    agent_id: str
    created_at: datetime
    metadata: dict[str, Any] | None = None
