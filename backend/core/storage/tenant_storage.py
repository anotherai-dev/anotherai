from datetime import datetime
from typing import Protocol

from core.domain.api_key import APIKey, CompleteAPIKey
from core.domain.tenant_data import TenantData


class TenantStorage(Protocol):
    async def tenant_by_uid(self, tenant_uid: int) -> TenantData: ...
    async def tenant_by_api_key(self, api_key: str) -> TenantData: ...
    async def tenant_by_org_id(self, org_id: str) -> TenantData: ...
    async def tenant_by_owner_id(self, owner_id: str) -> TenantData: ...

    async def create_tenant(self, tenant: TenantData) -> TenantData: ...
    async def create_tenant_for_org_id(self, org_id: str, org_slug: str | None, owner_id: str) -> TenantData: ...
    async def create_tenant_for_owner_id(self, owner_id: str) -> TenantData: ...

    async def update_tenant_slug(self, tenant: TenantData) -> TenantData: ...

    async def create_api_key(self, name: str, created_by: str) -> CompleteAPIKey: ...
    async def list_api_keys(self) -> list[APIKey]: ...
    async def delete_api_key(self, api_key_id: str) -> None: ...
    async def update_api_key_last_used_at(self, api_key_id: str, last_used_at: datetime) -> None: ...

    async def decrement_credits(self, credits: float) -> TenantData: ...
