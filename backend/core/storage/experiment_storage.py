from datetime import datetime
from typing import Protocol

from core.domain.experiment import Experiment


class ExperimentStorage(Protocol):
    async def create(self, experiment: Experiment, agent_uid: int | None = None) -> None: ...

    async def set_result(self, experiment_id: str, result: str) -> None: ...

    async def add_run_id(self, experiment_id: str, run_id: str) -> None: ...

    async def delete(self, experiment_id: str) -> None: ...

    async def list_experiments(
        self, agent_uid: int | None, since: datetime | None, limit: int, offset: int = 0,
    ) -> list[Experiment]: ...

    async def count_experiments(self, agent_uid: int | None, since: datetime | None) -> int: ...

    async def get_experiment(self, experiment_id: str) -> Experiment: ...
